# Build Instructions

The atools static library is required. Clone atools (`git clone https://github.com/albar965/atools.git`)
and follow the build instructions there. The instructions in this `BUILD.txt` file assume that atools was installed
and compiled successfully and Qt Creator was configured accordingly.

Clone the littlefgconnect GIT repository into the same directory as atools. You can use another
directory but then you need to adapt the configuration by changing environment variables.

Look at the `littlefgconnect.pro` file. There is a list of documented environment variables that
can be set to customize the build, like the paths to the projects. Most of these variables
are optional and use a reasonable default value. Set these variables in the Qt Creator GUI
or on the command line.

There is no need to edit the `*.pro` files.

## Default paths and Environment Variables

The projects can be built with almost no configuration changes since all project files fall back to sensible
default paths if the corresponding environment variables are not set. `APROJECTS` is the placeholder for the base directory in
the examples below. Avoid paths with spaces if possible.

* `APROJECTS/atools/src`                      Sources. `ATOOLS_INC_PATH`
* `APROJECTS/build-atools-debug`              atools debug build. `ATOOLS_LIB_PATH`
* `APROJECTS/build-atools-release`            atools release build. `ATOOLS_LIB_PATH`
* `APROJECTS/build-littlefgconnect-debug`     Little FGconnect debug build.
* `APROJECTS/build-littlefgconnect-release`   Little FGconnect release build.
* `APROJECTS/deploy`                          Target for `make deploy`. `DEPLOY_BASE`
* `APROJECTS/littlefgconnect`                 Sources.

## Windows

- Get OpenSSL binaries from https://bintray.com/vszakats/generic/openssl and extract them
  to the project directory. You need to get one like "openssl-1.1.1d-win32-mingw.zip".
  You might use any 1.1.1 version but have to adapt the OPENSSL_PATH if it differs.
- Clone littlefgconnect from GIT (`git clone https://github.com/albar965/littlefgconnect.git`)
  to e.g.: `C:\Projects\littlefgconnect`
- For littlefgconnect use the build directory of e.g.: `C:\Projects\build-littlefgconnect-release`. Otherwise
  change the paths with envronment variables (see `littlefgconnect.pro` file).
- Import littlefgconnect into the Qt Creator workspace (atools should be already there).
- Configure the project and enable the shadow build for release or debug versions.
- Set the environment variables `OPENSSL_PATH` (required on Windows) in the Qt Creator GUI.
- Set the build kit for atools and littlenfgconnect to MinGW 32bit.
- Run qmake from Qt Creator for all projects
- Build all projects from Qt Creator
- Create and run the target `deploy`. This will create a directory `DEPLOY_BASE\Little FGconnect` with the program.

The littlefgconnect project can be built using the MinGW environment only. MSVC will not work.

## Linux / macOS

Install Qt development packages. Version at least 5.6.

You can build the program on Linux or macOS similar to the Windows instructions above either using
the Qt Creator GUI or the command line.

OpenSSL will be detected automatically by the build scripts.

The following assumes that atools was already installed and built.

### To build the littlefgconnect release version:

```
mkdir build-littlefgconnect-release
cd build-littlefgconnect-release
qmake ../littlefgconnect/littlefgconnect.pro CONFIG+=release
make
```

### To build the littlefgconnect debug version:

```
mkdir build-littlefgconnect-debug
cd build-littlefgconnect-debug
qmake ../littlefgconnect/littlefgconnect.pro CONFIG+=debug
make
```

## Branches / Project Dependencies

Make sure to use the correct branches to avoid breaking dependencies.
The branch master is the unstable development branch but all software should compile there.

For releases check the release/MAJOR.MINOR branches to get the correct dependencies.
The atools branch is one MAJOR number ahead.

So Little FGconnect branch `release/1.2` should work well with atools `release/2.2` for example.
